(ns paragon.core-test
  (:require [clojure.test :refer :all]
            [paragon.core :refer :all]))

(deftest test-spread-black
  #_(turn-on-debugging)
  (let [jg (-> (new-just-graph)
               (can-explain [:h1] [:s1])
               (can-explain [:h1] [:s2])
               (can-explain [:h2] [:s1])
               (can-explain [:h2] [:s4])
               (can-explain [:h3] [:s3])
               (can-explain [:h3] [:s4])
               (can-explain [:j1 :j2] [:h1])
               (can-explain [:j2 :j3 :j4] [:h3])
               (add-inconsistencies [:h1 :h2 :h3]))
        jg-expanded (expand jg [:s1 :s2 :s3 :s4])]
    (visualize jg-expanded)
    (is (= #{:s1 :s2 :s3 :s4 :h1 :h2 :j1} (set (believed jg-expanded))))))

(deftest test-peyer
  #_(turn-on-debugging)
  (let [jg (-> (new-just-graph)
               (can-explain [:I1] [:E1])
               (can-explain [:G1] [:E1])
               (can-explain [:G6] [:E2])
               (can-explain [:G4] [:E3])
               (can-explain [:G5] [:E4])
               (can-explain [:I2] [:E4])
               (can-explain [:I2] [:E5])
               (can-explain [:G3] [:E6])
               (can-explain [:I3] [:E6])
               (can-explain [:G1] [:E7])
               (can-explain [:I4] [:E7])
               (can-explain [:I4a] [:E8])
               (can-explain [:G2] [:E9])
               (can-explain [:I5] [:E9])
               (can-explain [:G1] [:E10])
               (can-explain [:I6] [:E10])
               (can-explain [:I6] [:E11])
               (can-explain [:G7] [:E12])
               (can-explain [:I7] [:E12])
               (can-explain [:G8] [:E13])
               (can-explain [:I7] [:E13])
               (can-explain [:G1] [:E14])
               (can-explain [:I1] [:E14])
               (can-explain [:I1] [:E16])
               (can-explain [:I8] [:E17])
               ;; TODO check these inconsistencies
               (add-inconsistencies [:G1 :I1])
               (add-inconsistencies [:G1 :I8])
               (add-inconsistencies [:I1 :I8])
               (add-inconsistencies [:G2 :I5])
               (add-inconsistencies [:G3 :I3])
               (add-inconsistencies [:G5 :I2])
               (add-inconsistencies [:G7 :I7]))
        jg-expanded (expand jg [:E1 :E2 :E3 :E4 :E5 :E6 :E7
                                :E8 :E9 :E10 :E11 :E12 :E13
                                :E14 :E15 :E16 :E17])
        jg-contract-e16 (contract jg-expanded [:E16])
        jg-contract-e17-e16 (contract jg-contract-e16 [:E17])
        jg-contract-i4 (contract jg-expanded [:I4])
        jg-contract-i1-i4 (contract jg-contract-i4 [:I1])]
    (is (check-axioms jg-expanded))
    (is (check-axioms jg-contract-e16))
    (is (check-axioms jg-contract-e17-e16))
    (is (not ((set (believed jg-contract-e16)) :E16)))
    (is (not ((set (believed jg-contract-e17-e16)) :E17)))
    (is (not ((set (believed jg-contract-i4)) :I4)))
    (is (not ((set (believed jg-contract-i1-i4)) :I1)))
    #_(visualize jg-expanded)))

